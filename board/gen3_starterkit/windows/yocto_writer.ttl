; SPDX-License-Identifier: GPL-2.0
;====================================
;
; Renesas StarterKit Yocto Writer
;
;====================================
;=============================
; dir_top
;=============================
getdir __dir
sprintf2 dir_top "%s\..\..\.." __dir

;=============================
; rom, board, baudrate
;=============================
board	 = "gen3_starterkit"
rom	 = "yocto"
soc_ws	 = ""
baudrate = 115200	; used at init / main

;=============================
; load soc (soc_ws == "")
;=============================
sprintf2 __soc "%s\board\%s\config\soc" dir_top board
include __soc

;=============================
; connection check (yocto)
;=============================
sprintf2 __soc "%s\board\%s\config\rom\%s\connection" dir_top board rom
include __soc

func_name = "connection_check"
call call_func

;=============================
; load addr_map
;=============================
func_name = "load_addr_map"
call call_func

;=============================
; select mode
;=============================
func_name = "select_mode_with_mot"
call call_func

;=============================
; select srec dir
;=============================
func_name = "select_srec_dir"
call call_func

;=============================
; init for each mode
;=============================
strcompare mode "normal"
if result=0 then
   sprintf2 sw_file "%s\board\%s\config\sw\%s" dir_top board soc
   func_name = "dip_switch_msg"
   call call_func

   func_name = "starterkit_type_init_normal"
else
   func_name = "starterkit_type_init_mot"
endif
call call_func

;=============================
; speed_up
;=============================
func_name = "speed_up"
call call_func

;=============================
; run_main
; M3-2G normal mode is special
;=============================
func_name = "ask_loop_mode"
call call_func

sprintf2 __check "%s_%s" soc_ws mode
strcompare __check "m3_2g_normal"
if result=0 then
  yes_loop = 1
else
  yes_loop = 2
endif

select_ans = "3"
func_name = "starterkit_type_main"
call call_func

;=============================
; finish
;=============================
messagebox "finished" "message"

exit
;=============================
; call_func
;=============================
: call_func
sprintf2 func "%s\script\ttm\%s" dir_top func_name
include func
return
